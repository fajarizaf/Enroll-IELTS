<?php ob_start(); ?><?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); ?><?phpclass Profile_model extends CI_Model {    function  __construct() {        parent::__construct();        date_default_timezone_set('Asia/Jakarta');        $this->load->helper('form');        $this->load->library('showuser');        $this->load->library('generated_tanggal');    }   public function updateprofile() {            $idusers = $this->input->post('idusers');            if($idusers) {                  $idusers = $this->input->post('idusers');                } else {                  $idusers = $this->session->userdata('idusers');            }                        $title = $this->input->post('title');            $last_name = $this->input->post('last_name');            $first_name = $this->input->post('first_name');            $gender = $this->input->post('gender');            $phone_number = $this->input->post('phone_number');            $address = $this->input->post('address');            $city = $this->input->post('city');            $zipcode = $this->input->post('zipcode');            $country = $this->input->post('country');            $date = $this->input->post('date_of_birth');            $identity = $this->input->post('identity');            $number_identity = $this->input->post('number_identity');            $specialneeds = $this->input->post('specialneeds');            $notes = $this->input->post('notes');            $useridfile = $this->input->post('uploadfile');            $userphoto = $this->input->post('uploadfile3');                       if($specialneeds == 'YES') {                $specialneedsdesc = $this->input->post('specialneedsdesc');                $notes = $this->input->post('notes');            } else if ($specialneeds == 'NO') {                $specialneedsdesc = '-';                $notes = '-';            }            $dt = array(                "usertitle" => $title,                "userfamilyname" => $last_name,                "userfirstname" => $first_name,                "userothername" => 'x',                "usergender" => $gender,                "userphone" => $phone_number,                "useraddr1" => $address,                "useraddr2" => $country,                "useraddr3" => $city,                "useraddr4" => $zipcode,                "userdob" => $date,                "useridcard" => $identity,                "useridnumber" => $number_identity,                "userspecialcondition" => $specialneedsdesc,                "usernotes" => $notes,                "userstatus" => '1',                "useridfile" => $useridfile,                "userphoto" => $userphoto,                "created" => date("Y-m-d H:i:s"),                "updated" => date("Y-m-d H:i:s"),                );                    $this->db->where('idusers',$idusers);            $query =  $this->db->update("users", $dt);            $response = array('response' => 'sukses');            echo json_encode($response);   }   public function cekhasregistrations($idusers) {        $this->db->join("schedules","schedules.idschedules = registrations.idschedules");        $this->db->where('registrations.idusers', $idusers);        $this->db->where('registrationspayment', 'PAID');        $this->db->where('schedules.schdate >', date("Y-m-d H:i:s"));        $q = $this->db->get('registrations');        return $q->num_rows();   }}?>