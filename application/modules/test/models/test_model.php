<?php ob_start(); ?><?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); ?><?phpclass Test_model extends CI_Model {    function  __construct() {        parent::__construct();        $this->load->helper('form');        $this->load->library('showuser');        $this->load->library('generated_tanggal');    }        function getTest($limit,$offset)    {        $this->db->limit($limit, $offset);        $this->db->order_by('idbranches', 'DESC');        $q =  $this->db->get("branches");        return $q->result();    }        public function count_test() {            $query =  $this->db->get("branches");            return $query->num_rows();     }    public function getTestschedule() {      $partner = $this->uri->segment(3);      $query = $this->db->query('select * from branches where idpartners="'.$partner.'"');      foreach ($query->result() as $row ) { ?>                 <option value="<?php echo $row->idbranches ?>"><?php echo $row->branchname ?></option>     <?php  }    }    public function addtest() {        $partner = $this->input->post('selectpartner');        $test = $this->input->post('testvenuename');        $phone = $this->input->post('phone');        $code = $this->input->post('areacode');        $email = $this->input->post('email');        $address = $this->input->post('address');        $idusers = $this->session->userdata('idusers');        $usernumber = $code.'|'.$phone;        $data = array(            'idusers' => $idusers,            'idpartners' => $partner,            'branchname' => $test,            'branchphone' => $usernumber,            'branchemail' => $email,            'branchaddr' => $address,            );        $query = $this->db->insert('branches',$data);        if($query) {          $status = array('status'=> 'sukses');          echo json_encode($status);        } else {          $status = array('status'=> 'gagal');          echo json_encode($status);        }    }    public function updatetest() {        $idbranches = $this->input->post('idbranches');        $partner = $this->input->post('selectpartner');        $test = $this->input->post('testvenuename');        $phone = $this->input->post('phone');        $code = $this->input->post('areacode');        $email = $this->input->post('email');        $address = $this->input->post('address');        $idusers = $this->session->userdata('idusers');        $usernumber = $code.'|'.$phone;        $data = array(            'idusers' => $idusers,            'idpartners' => $partner,            'branchname' => $test,            'branchphone' => $usernumber,            'branchemail' => $email,            'branchaddr' => $address,            );        $this->db->where('idbranches',$idbranches);            $query = $this->db->update('branches',$data);        if($query) {          $status = array('statuss'=> 'sukses','idbranches' => $idbranches);          echo '{"result":'.json_encode($status).'}';        } else {          $status = array('status'=> 'gagal');          echo json_encode($status);        }    }    function getnewschedule() {        $this->db->where('schdate >', date("Y-m-d H:i:s"));        $this->db->join("branches","schedules.idbranches = branches.idbranches");        $this->db->join("exams","schedules.idexams = exams.idexams");        $this->db->limit(1);        $this->db->order_by('idschedules', 'DESC');        $q =  $this->db->get("schedules");        return $q->result();    }    function getupdatetest() {        $idbranches = $this->uri->segment(3);        $this->db->join("partners","branches.idpartners = partners.idpartners");        $this->db->where('idbranches', $idbranches );        $q =  $this->db->get("branches");        return $q->result();    }    function getedittest() {        $idbranches = $this->uri->segment(3);        $this->db->join("partners","branches.idpartners = partners.idpartners");        $this->db->where('idbranches', $idbranches );        $q =  $this->db->get("branches");        return $q->result();    }    function getpartnername($table,$id) {            $this->db->where('idpartners',$id);            $q = $this->db->get($table);            foreach ($q->result() as $row ) {                $name = $row->partnername;                return $name;            }    }    function deletetest() {      $idexams = $this->input->post('idbranches');            $this->db->where('idbranches', $idexams);      $query = $this->db->delete('branches');        if($query) {          $status = array('status'=> $idexams);          echo json_encode($status);        }    }}?>