<?php ob_start(); ?><?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); ?><?phpclass Test_model extends CI_Model {    function  __construct() {        parent::__construct();        $this->load->helper('form');        $this->load->library('showuser');        $this->load->library('generated_tanggal');    }        function getTest($limit,$offset)    {        $this->db->limit($limit, $offset);        $this->db->join("citybranches","branches.city = citybranches.idcity");        $this->db->order_by('idbranches', 'DESC');        $q =  $this->db->get("branches");        return $q->result();    }        public function count_test() {            $query =  $this->db->get("branches");            return $query->num_rows();     }    public function getTestschedule() {      $partner = $this->uri->segment(3);      $query = $this->db->query('select * from branches where idpartners="'.$partner.'"');      foreach ($query->result() as $row ) { ?>                 <option value="<?php echo $row->idbranches ?>"><?php echo $row->branchname ?></option>     <?php  }    }    public function addtest() {        $partner = $this->input->post('selectpartner');        $test = $this->input->post('testvenuename');        $phone = $this->input->post('phone');        $code = $this->input->post('areacode');        $email = $this->input->post('email');        $address = $this->input->post('address');        $city = $this->input->post('selectcity');        $idusers = $this->session->userdata('idusers');        $usernumber = $code.'|'.$phone;        $data = array(            'idusers' => $idusers,            'idpartners' => $partner,            'branchname' => $test,            'branchphone' => $usernumber,            'branchemail' => $email,            'branchaddr' => $address,            'city'  => $city            );        $query = $this->db->insert('branches',$data);        if($query) {          $status = array('status'=> 'sukses');          echo json_encode($status);        } else {          $status = array('status'=> 'gagal');          echo json_encode($status);        }    }    public function updatetest() {        $idbranches = $this->input->post('idbranches');        $partner = $this->input->post('selectpartner');        $test = $this->input->post('testvenuename');        $phone = $this->input->post('phone');        $code = $this->input->post('areacode');        $email = $this->input->post('email');        $address = $this->input->post('address');        $city = $this->input->post('selectcity');        $idusers = $this->session->userdata('idusers');        $usernumber = $code.'|'.$phone;        $data = array(            'idusers' => $idusers,            'idpartners' => $partner,            'branchname' => $test,            'branchphone' => $usernumber,            'branchemail' => $email,            'branchaddr' => $address,            'city'  => $city            );        $this->db->where('idbranches',$idbranches);            $query = $this->db->update('branches',$data);        if($query) {          $status = array('statuss'=> 'sukses','idbranches' => $idbranches);          echo '{"result":'.json_encode($status).'}';        } else {          $status = array('status'=> 'gagal');          echo json_encode($status);        }    }    function getnewschedule() {        $this->db->where('schdate >', date("Y-m-d H:i:s"));        $this->db->join("branches","schedules.idbranches = branches.idbranches");        $this->db->join("exams","schedules.idexams = exams.idexams");        $this->db->limit(1);        $this->db->order_by('idschedules', 'DESC');        $q =  $this->db->get("schedules");        return $q->result();    }    function getupdatetest() {        $idbranches = $this->uri->segment(3);        $this->db->join("partners","branches.idpartners = partners.idpartners");        $this->db->join("citybranches","branches.city = citybranches.idcity");        $this->db->where('idbranches', $idbranches );        $q =  $this->db->get("branches");        return $q->result();    }    function getedittest() {        $idbranches = $this->uri->segment(3);        $this->db->join("partners","branches.idpartners = partners.idpartners");        $this->db->join("citybranches","branches.city = citybranches.idcity");        $this->db->where('idbranches', $idbranches );        $q =  $this->db->get("branches");        return $q->result();    }    function getpartnername($table,$id) {            $this->db->where('idpartners',$id);            $q = $this->db->get($table);            foreach ($q->result() as $row ) {                $name = $row->partnername;                return $name;            }    }    function deletetest() {      $idexams = $this->input->post('idbranches');            $this->db->where('idbranches', $idexams);      $query = $this->db->delete('branches');        if($query) {          $status = array('status'=> $idexams);          echo json_encode($status);        }    }    function deletecity() {      $idexams = $this->input->post('idcity');            $this->db->where('idcity', $idexams);      $query = $this->db->delete('citybranches');        if($query) {          $status = array('status'=> $idexams);          echo json_encode($status);        }    }    function filterbypartner($date,$limit,$offset) {        $this->db->limit($limit, $offset);        $this->db->join("citybranches","branches.city = citybranches.idcity");        $this->db->where('idpartners', $date);        $this->db->order_by('idbranches', 'DESC');        $q =  $this->db->get("branches");        return $q->result();    }    function countvenue($idcity) {       $this->db->where('city', $idcity);       $q =  $this->db->get("branches");       echo $q->num_rows();     }    public function count_testpartner($date) {            $this->db->join("citybranches","branches.city = citybranches.idcity");            $this->db->where('idpartners', $date);            $q =  $this->db->get("branches");            return $q->num_rows();    }    function filterbycity($date,$limit,$offset) {        $this->db->limit($limit, $offset);        $this->db->join("citybranches","branches.city = citybranches.idcity");        $this->db->where('city', $date);        $this->db->order_by('idbranches', 'DESC');        $q =  $this->db->get("branches");        return $q->result();    }    public function count_testcity($date) {            $this->db->join("citybranches","branches.city = citybranches.idcity");            $this->db->where('city', $date);            $q =  $this->db->get("branches");            return $q->num_rows();    }    public function addcity() {        $name = $this->input->post('namecity');        $cek = $this->db->query('select * from citybranches where cityname="'.$name.'"');        if($cek->num_rows() == 1) {                } else {            $data = array ('cityname' => $name,);            $query = $this->db->insert('citybranches',$data);            if($query) {                $get = $this->db->query('select * from citybranches where cityname="'.$name.'"');                foreach ($get->result() as $row) { ?>                                      <tr atr="<?php echo $row->idcity ?>">                    <td ><?php echo $row->cityname ?></td>                    <td><div show="show_edit<?php echo $row->idcity; ?>" value="<?php echo $row->idcity; ?>" class="iconedit"></div></td>                    <td ><div value="<?php echo $row->idcity; ?>"  class="icondelete"></div></td>                  </tr>                  <tr class="down-detail" id="show_edit<?php echo $row->idcity; ?>"  >                  <input type="hidden" name="idexams" value="<?php echo $row->idcity; ?>">                        <td colspan="4" style="display:table-cell" >                          <table>                            <tr>                              <td style="padding-top:14px;">Name</td>                              <td colspan="2"><input type="hidden" name="idcity" value="<?php echo $row->idcity ?>" class="idcity"></input><input type="text" name="modulename" value="<?php echo $row->cityname ?>" class="shownamemodule"></input></td>                              <td><input type="submit" name="proses" class="btn btn-success btnupdate" style="float:right;" value="Update"></input></td>                            </tr>                          </table>                        </td>                  </tr>       <?php     }            }        }    }    public function updatecity() {        $id = $this->input->post('idcity');        $name = $this->input->post('cityname');        $data = array('cityname' => $name);        $this->db->where('idcity', $id);        $q = $this->db->update('citybranches', $data);        if($q) {            $status = array('status'=> 'sukses');            echo json_encode($status);        } else {            $status = array('status'=> 'gagal');            echo json_encode($status);        }    }}?>